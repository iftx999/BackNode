const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { Pool } = require('pg');

const app = express();
const port = 3000;

// Configuração do banco de dados
const pool = new Pool({
  user: 'postgres',
  host: 'localhost',
  database: 'postgres',
  password: 'abc123',
  port: 5432,
});

// Middleware
app.use(bodyParser.json());
app.use(cors());

// Rotas
app.get('/cursos', async (req, res) => {
  try {
    const client = await pool.connect();
    const result = await client.query('SELECT * FROM cursos');
    const cursos = result.rows;
    client.release();
    res.json(cursos);
  } catch (err) {
    console.error(err);
    res.status(500).send('Erro ao obter cursos');
  }
});

app.post('/cursos', async function (req, res) {
  const { nome } = req.body;
  try {
    const client = await pool.connect();
    const result = await client.query('INSERT INTO cursos (nome) VALUES ($1) RETURNING *', [nome]);
    const curso = result.rows[0];
    client.release();
    res.json(curso);
  } catch (err) {
    console.error(err);
    res.status(500).send('Erro ao adicionar curso');
  }
});

// Outras rotas para aluno e matrícula

// Inicialização do servidor
app.listen(port, () => {
  console.log(`Servidor está executando na porta ${port}`);
});
